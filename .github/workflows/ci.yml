# This file is autogenerated by maturin v0.15.1
# To update, run
#
#    maturin generate-ci github
#
name: FFmpeg-Input CI

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'
  pull_request:
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  linux:
    strategy:
      matrix:
        include:
          - docker_file: docker/Dockerfile.manylinux_2_28_ARM64
            name: manylinux-arm
            arch: linux/arm64
            runner: ARM64
          - docker_file: docker/Dockerfile.manylinux_2_28_X64
            name: manylinux-x86
            arch: linux/amd64
            runner: X64
          - docker_file: docker/Dockerfile.u2204
            name: native-arm
            arch: linux/arm64
            runner: ARM64
          - docker_file: docker/Dockerfile.u2204
            name: native-x86
            arch: linux/amd64
            runner: X64
    runs-on:
      - self-hosted
      - ${{ matrix.runner }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Build docker image
        uses: docker/build-push-action@v4
        with:
          file: ${{ matrix.docker_file }}
          platforms: ${{ matrix.arch }}
          tags: ffmpeg_input
          push: false
          load: true
          context: .

      - name: Copy wheels
        run: docker run --rm -v $(pwd)/distfiles:/tmp ffmpeg_input cp -R /opt/dist /tmp

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.name }}
          path: distfiles/dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [linux]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wheels-manylinux-arm
      - uses: actions/download-artifact@v4
        with:
          name: wheels-manylinux-x86
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --skip-existing *
      - name: Download native artifacts ARM
        uses: actions/download-artifact@v4
        with:
          name: wheels-native-arm
      - name: Download native artifacts x86
        uses: actions/download-artifact@v4
        with:
          name: wheels-native-x86
      - name: Attach Artifacts to the release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            *.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
